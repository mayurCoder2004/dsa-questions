class myQueue {
    int f;
    int r;
    int [] arr;
    int size;

    // Constructor
    public myQueue(int n) {
        arr = new int[n];
        f = -1;
        r = -1;
        size = 0;
    }

    public boolean isEmpty() {
        // Check if queue is empty
        if (size == 0) {
            return true;
        }
        return false;
    }

    public boolean isFull() {
        // Check if queue is full
        if (size == arr.length) {
            return true;
        }
        return false;
    }

    public void enqueue(int x) {
        // Enqueue
        if (isFull()) {
            return;
        }
        if (f == -1) {
            f = 0;
            r = 0;
            arr[r] = x;
        }
        else {
            arr[++r] = x;
        }
        size++;
    }

    public void dequeue() {
        // Dequeue
        if (isEmpty()) {
            return;
        }
        f++;
        size--;
        if (size == 0) {
            f = -1;
            r = -1;
        }
    }

    public int getFront() {
        // Get front element
        if (isEmpty()) {
            return -1;
        }
        return arr[f];
    }

    public int getRear() {
        // Get last element
        if (isEmpty()) {
            return -1;
        }
        return arr[r];
    }
}
