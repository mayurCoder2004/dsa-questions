class Solution {
    public static int lower_bound(int [] arr, int n, int x){
        int st = 0, end = n-1;
        int ans = n;
        
        while (st <= end){
            int mid = st + (end - st)/2;
            if (arr[mid] >= x){
                ans = mid;
                end = mid - 1;
            }
            else {
                st = mid + 1;
            }
        }
        return ans;
    }
    
    public static int upper_bound(int [] arr, int n, int x){
        int st = 0, end = n - 1;
        int ans = n;
        
        while (st <= end){
            int mid = st + (end - st)/2;
            if (arr[mid] > x){
                ans = mid;
                end = mid - 1;
            }
            else {
                st = mid + 1;
            }
        }
        return ans;
    }
    int countFreq(int[] arr, int target) {
        int n = arr.length;
        int lb = lower_bound(arr, n, target);
        int ub = upper_bound(arr, n, target);
        
        return ub - lb;
    }
}
