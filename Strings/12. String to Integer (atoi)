class Solution {
    public int myAtoi(String s) {
        int n = s.length();
        int i = 0;

        // Ignore leading whitespaces
        while (i < n && s.charAt(i) == ' ') {
            i++;
        }

        // Handle sign
        int sign = 1;
        if (i < n && (s.charAt(i) == '-' || s.charAt(i) == '+')) {
            if (s.charAt(i) == '-') {
                sign = -1;
            }
            i++;
        }

        // Ignore leading zeros
        while (i < n && s.charAt(i) == '0') {
            i++;
        }

        // Convert digits to number
        double num = 0;
        while (i < n && Character.isDigit(s.charAt(i))) {
            num = num * 10 + (s.charAt(i) - '0');
            i++;
        }

        num = num * sign;

        // Handle integer overflow
        if (num > Integer.MAX_VALUE) return Integer.MAX_VALUE;
        if (num < Integer.MIN_VALUE) return Integer.MIN_VALUE;

        return (int) num;
    }
}
