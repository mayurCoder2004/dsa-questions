                                                                    // BRUTE FORCE APPROACH

class Solution {
    public int maxProfit(int[] prices) {
        int n = prices.length;
        int maxProfit = 0;

        for (int i=0; i<n; i++) {
            for (int j=i; j<n; j++) {
                int profit = prices[j] - prices[i];
                maxProfit = Math.max(profit, maxProfit);
            }
        }
        return maxProfit;
    }
}


                                                                    // OPTIMAL APPROACH

class Solution {
    public int maxProfit(int[] prices) {
        int n = prices.length;
        int maxProfit = 0;
        int maxRight = 0;

        for (int i=n-1; i>=0; i--) {
            maxRight = Math.max(prices[i], maxRight);
            int profit = maxRight - prices[i];
            maxProfit = Math.max(profit, maxProfit);
        }
        return maxProfit;
    }
}
